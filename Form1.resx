<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQMCBAAA
        AAAAAAAAAAAAAAABAQALIhcmGEozWCRwTIguj2GwNaVwzzqzeuI9vIDuPr+C8z6/gvI8uX7rOa933TOe
        bMYshlulIWVFehQ9KkcHFw8YAAAAAAAAAAAAAAAAAQIBAwECAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>